// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_Relations.Migrations
{
    [DbContext(typeof(OnetoOneAppDbContext))]
    partial class OnetoOneAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaxPayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Taxpayers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Ali"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "Reza"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "Sara"
                        });
                });

            modelBuilder.Entity("TaxRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TaxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaxPayerID")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalTaxPaid")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("TaxPayerID")
                        .IsUnique();

                    b.ToTable("TaxRecords");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TaxCode = "TAX12345",
                            TaxPayerID = 1,
                            TotalTaxPaid = 5000.00m
                        },
                        new
                        {
                            Id = 2,
                            TaxCode = "TAX67890",
                            TaxPayerID = 2,
                            TotalTaxPaid = 7500.00m
                        },
                        new
                        {
                            Id = 3,
                            TaxCode = "TAX54321",
                            TaxPayerID = 3,
                            TotalTaxPaid = 3000.00m
                        });
                });

            modelBuilder.Entity("TaxRecord", b =>
                {
                    b.HasOne("TaxPayer", "Taxpayer")
                        .WithOne("Taxrecord")
                        .HasForeignKey("TaxRecord", "TaxPayerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Taxpayer");
                });

            modelBuilder.Entity("TaxPayer", b =>
                {
                    b.Navigation("Taxrecord")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
